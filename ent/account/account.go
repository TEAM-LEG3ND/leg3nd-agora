// Code generated by ent, DO NOT EDIT.

package account

import (
	"fmt"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldNickname holds the string denoting the nickname field in the database.
	FieldNickname = "nickname"
	// FieldFullname holds the string denoting the fullname field in the database.
	FieldFullname = "fullname"
	// FieldOauthProvider holds the string denoting the oauth_provider field in the database.
	FieldOauthProvider = "oauth_provider"
	// Table holds the table name of the account in the database.
	Table = "accounts"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldEmail,
	FieldNickname,
	FieldFullname,
	FieldOauthProvider,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OauthProvider defines the type for the "oauth_provider" enum field.
type OauthProvider string

// OauthProvider values.
const (
	OauthProviderGoogle OauthProvider = "google"
)

func (op OauthProvider) String() string {
	return string(op)
}

// OauthProviderValidator is a validator for the "oauth_provider" field enum values. It is called by the builders before save.
func OauthProviderValidator(op OauthProvider) error {
	switch op {
	case OauthProviderGoogle:
		return nil
	default:
		return fmt.Errorf("account: invalid enum value for oauth_provider field: %q", op)
	}
}
